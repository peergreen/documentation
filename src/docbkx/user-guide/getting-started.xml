<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>Getting started with Peergreen Server</title>

  <section>
    <title>Introduction</title>

    <para>The goal of this document is to get you up to run a Peergreen server as quickly as possible. It provides basic
    steps described in the following sections. Note that you may need to refer other guides for further
    information.</para>
  </section>

  <section>
    <title>What is Peergreen Server ?</title>

    <para>Peergreen server is an OSGi-based "a la carte" and cloud native application server compliant to both Platform
    as a Service (PaaS) and Internet of Things requirements. Its low footprint enables its deployment from server in
    data-centers to embedded gateways.</para>

    <para>Peergreen is a software company started by the core team who developed JOnAS the OW2 Java EE Application
    Server.</para>
  </section>

  <section>
    <title>Prerequisites</title>

    <para>Peergreen Server requires a Java SE 7 environment to run. You may refer to Oracle web site (<link
    xlink:href="http://www.oracle.com/technetwork/java/javase/overview/index.html"> Java SE</link> or <link
    xlink:href="http://www.oracle.com/technetwork/java/embedded/overview/getstarted/index.html"> Java SE
    Embedded</link>) or any others compliant JVM products documentations for details on how to download and install Java
    SE 7 or greater.</para>
  </section>

  <section>
    <title>Download</title>

    <para>Peergreen Server can be <link xlink:href="http://www.peergreen.com/Download/">downloaded from the Peergreen
    web site</link>. The jar file is compressed with <link
    xlink:href="http://docs.oracle.com/javase/1.5.0/docs/guide/deployment/deployment-guide/pack200.html">pack200</link>
    to reduce the download time. It will be unpacked automatically at the first launch.</para>

    <para>Peergreen server is available for different targets : Embedded and Server mode</para>

    <para>Here are the available profiles for Peergreen server :</para>

    <orderedlist>
      <listitem>
        <para>Peergreen kernel</para>

        <para>It provides the OSGi kernel allowing to deploy OSGi bundles. It is the core for all the Peergreen
        profiles</para>
      </listitem>

      <listitem>
        <para>Peergreen Tomcat</para>

        <para>This profile provides an assembly including the latest Tomcat version running on top of the Peergreen
        kernel. This allows to deploy Web Application (.war files) by dropping them in the Peergreen
        <filename>deploy</filename> folder. Peergreen hybrid mode is also available as OSGi HTTP service is also
        provided and BundleContext can be injected in a servlet by applying javax.annotation.Resource on a BundleContext
        field.</para>
      </listitem>

      <listitem>
        <para>Peergreen Web Application Server (WAS)</para>

        <para>It targets developers that needs more than just a web container.</para>

        <para>It includes the Peergreen Tomcat features and it also includes :</para>

        <itemizedlist>
          <listitem>
            <para>JAX-RS 2.0 for developping Restful components</para>
          </listitem>

          <listitem>
            <para>JPA 2.0 for persisting JPA entities</para>
          </listitem>

          <listitem>
            <para>Bean Validation 1.0</para>
          </listitem>

          <listitem>
            <para>JTA 1.1 for the transactions</para>
          </listitem>

          <listitem>
            <para>H2 java database</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Peergreen OSGi Enterprise R5 Server</para>

        <para>This profiles targets the OSGi developers that needs more than just the OSGi gateway</para>

        <para>It provides :</para>

        <itemizedlist>
          <listitem>
            <para>HTTP service</para>
          </listitem>

          <listitem>
            <para>SubSystems</para>
          </listitem>

          <listitem>
            <para>JTA service</para>
          </listitem>

          <listitem>
            <para>JNDI service</para>
          </listitem>

          <listitem>
            <para>JDBC Datasource Factory</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </orderedlist>
  </section>

  <section>
    <title>Starting Peergreen Server</title>

    <para>To start Peergreen Server, run the java command :</para>

    <screen><prompt>java -jar peergreen-server-1.0.0.jar</prompt></screen>

    <para>The server starts :</para>

    <screen><prompt> ____                                           ____                           
|  _ \ ___  ___ _ __ __ _ _ __ ___  ___ _ __   / ___|  ___ _ ____   _____ _ __ 
| |_) / _ \/ _ \ '__/ _` | '__/ _ \/ _ \ '_ \  \___ \ / _ \ '__\ \ / / _ \ '__|
|  __/  __/  __/ | | (_| | | |  __/  __/ | | |  ___) |  __/ |   \ V /  __/ |   
|_|   \___|\___|_|  \__, |_|  \___|\___|_| |_| |____/ \___|_|    \_/ \___|_|   
                    |___/____                                      _ _         
                        / ___|___  _ __ ___  _ __ ___  _   _ _ __ (_) |_ _   _ 
                       | |   / _ \| '_ ` _ \| '_ ` _ \| | | | '_ \| | __| | | |
                       | |__| (_) | | | | | | | | | | | |_| | | | | | |_| |_| |
                        \____\___/|_| |_| |_|_| |_| |_|\__,_|_| |_|_|\__|\__, |
                                                _____    _ _ _   _       |___/ 
                                               | ____|__| (_) |_(_) ___  _ __  
                                               |  _| / _` | | __| |/ _ \| '_ \ 
                                               | |__| (_| | | |_| | (_) | | | |
                                               |_____\__,_|_|\__|_|\___/|_| |_|

Welcome on Peergreen Platform:
  - Enter help or hit TAB key to list available commands.
  - Enter shutdown or hit CTRL^D key to shutdown the platform.

System.out redirected to $HOME/Documents/peergreen/logs/system.out
System.err redirected to $HOME/Documents/peergreen/logs/system.err

Peergreen News
Peergreen wins two OW2 Awards : http://www.peergreen.com/Blog/Peergreen+Won+Two+Awards+During+OW2CON+2012?language=en
OpenCloudware Plenary Meeting : http://www.peergreen.com/Blog/OpenCloudWare+Meeting?language=en
</prompt></screen>

    <note>
      <para>At the first launch, the kernel uncompress the pack200 jar files and creates the server’s directory tree.
      That may take some time on slow machines.</para>
    </note>
  </section>

  <section>
    <title>Setting the internet proxy</title>

    <para>At each launch, Peergreen Server checks Peergreen’news enabling to be aware of new releases availaibility. For
    that, it requires an internet connection. If you’re behind an internet proxy, you can set its parameters through the
    Java properties :</para>

    <screen><prompt>-Dhttp.proxyHost=myproxy.mycompany.com -Dhttp.proxyPort=80</prompt></screen>
  </section>

  <section>
    <title>Directory tree</title>

    <para>The Peergreen Server directory tree contains the following elements :</para>

    <table frame="none">
      <title>Directory tree</title>

      <tgroup align="justify" cols="2" colsep="1" rowsep="1">
        <colspec colname="c1" colwidth="1*"/>

        <colspec colname="c2" colwidth="3*"/>

        <thead>
          <row>
            <entry align="center"><emphasis role="bold">Directory</emphasis></entry>

            <entry align="center"><emphasis role="bold">Description</emphasis></entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>mvn-cache</entry>

            <entry>Cache of the maven artefacts downloaded during application deployment</entry>
          </row>

          <row>
            <entry>peergreen</entry>

            <entry>Work space of the server . If removed the persistent store is lost.</entry>
          </row>

          <row>
            <entry>peergreen/logs</entry>

            <entry>Error &amp; messages debug files</entry>
          </row>

          <row>
            <entry>peergreen/storage</entry>

            <entry>Persistent store of the underlying OSGi framework</entry>
          </row>

          <row>
            <entry>peergreen/bundles</entry>

            <entry>Bundles of the platform</entry>
          </row>

          <row>
            <entry>deploy</entry>

            <entry>Application deployment directory (bundles, deployment plan). The directory is periodically scanned .
            You can drop a file to deploy it or remove it to undeploy it. If the file is touched, the related module is
            updated.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section>
    <title>A few useful commands</title>

    <para>Peergreen Server provides a dynamic shell with native commands. The shell session is automatically started at
    the server launch.</para>

    <para>You can use the help command to get an overview of the commands :</para>

    <screen><prompt>...
Scope 'shelbie' (9 commands)
-----------------------------------
  shelbie:shutdown     Shutdown the OSGi platform
  shelbie:each         Execute a closure on a list of arguments.
  shelbie:help         Display command's help
...
</prompt></screen>

    <para>The commands are categorized with a prefix (scope) for easier search and uniqueness. For example, commands
    related to the underlying JVM resources are prefixed with <literal>javavm:</literal>.</para>

    <para>The following table describes a few commands:</para>

    <table frame="none">
      <title>Some useful commands</title>

      <tgroup align="justify" cols="2" colsep="1" rowsep="1">
        <colspec colname="c1" colwidth="1*"/>

        <colspec colname="c2" colwidth="3*"/>

        <thead>
          <row>
            <entry align="center"><emphasis role="bold">Command</emphasis></entry>

            <entry align="center"><emphasis role="bold">Description</emphasis></entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry><command>shelbie:help</command></entry>

            <entry>List the available command</entry>
          </row>

          <row>
            <entry><command>shelbie:history</command></entry>

            <entry>List commands historic</entry>
          </row>

          <row>
            <entry><command>shelbie:shutdown</command></entry>

            <entry>Shutdown the underlying OSGi gateway</entry>
          </row>

          <row>
            <entry><command>info:events</command></entry>

            <entry>Print relevant platform events with timestamps.</entry>
          </row>

          <row>
            <entry><command>info:elapsed &lt;e1&gt; &lt;e2&gt;</command></entry>

            <entry>Compute the elapsed time between e2 and e1</entry>
          </row>

          <row>
            <entry><command>javavm:threads</command></entry>

            <entry>Display threads list (in their container ThreadGroup)</entry>
          </row>

          <row>
            <entry><command>javavm:thread-dump</command></entry>

            <entry>Get a threads dump</entry>
          </row>

          <row>
            <entry><command>deployment:list</command></entry>

            <entry>List deployed artefacts with uri</entry>
          </row>

          <row>
            <entry><command>deployment:deploy-artefact &lt;uri&gt;</command></entry>

            <entry>Deploy an artefact. The ‘-p’ flag enables to persist the deployment and recover it after a JVM
            reboot.</entry>
          </row>

          <row>
            <entry><command>deployment:undeploy-artefact</command></entry>

            <entry>Undeploy an artefact</entry>
          </row>

          <row>
            <entry><command>felix:lb</command></entry>

            <entry>List installed bundles</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section>
    <title>Remote access</title>

    <para>Peergreen Server provides a shell remote access through a simple telnet interface. By default, the server
    listens on the <literal>10023</literal> port number for all the network interfaces. So you can connect to the server
    shell with the following command:</para>

    <screen><prompt>telnet localhost 10023</prompt></screen>
  </section>

  <section>
    <title>Deploy a sample application</title>

    <para>You can get a sample application HelloService on github <link
    xlink:href="https://github.com/peergreen/pax-exam/tree/master/hello-service">here</link>. Once compiled, you can
    deploy the application by dropping the bundle into the deploy directory.</para>

    <screen><prompt>cp target/hello-service-1.0.0-SNAPSHOT.jar &lt;your-install-dir&gt;/deploy</prompt></screen>

    <para>You can check the installation of the bundle with the lb command in the shell console:</para>

    <screen><prompt>START LEVEL 1
   ID|State      |Level|Name
    0|Active     |    0|systemBundle (3.8.1.v20120830-144521)
    1|Active     |    1|Peergreen Deployment Api (1.0.1)
    2|Active     |    1|Peergreen Deployment Internal (1.0.1)
    3|Active     |    1|extension-jonas (1.0.1)
    4|Active     |    1|Peergreen deployment scanner (1.0.1)
    5|Active     |    1|Apache Felix iPOJO (1.10.1)
    6|Active     |    1|Apache Felix iPOJO White Board Pattern Handler (1.6.0)
    7|Active     |    1|OW2 Utilities :: i18n (2.0.0)
    8|Active     |    1|OW2 Utilities :: Log :: JUL Bridge (2.0.0)
    9|Active     |    1|Apache Felix Configuration Admin Service (1.6.0)
   10|Active     |    1|Apache Felix Resolver (0.1.0.r20130402)
   11|Active     |    1|OW2 Shelbie :: Core (2.0.0.M3)
   12|Active     |    1|OW2 Shelbie iPOJO Commands (2.0.0.M3)
   13|Active     |    1|OW2 Shelbie :: Commands :: Built-in (2.0.0.M3)
   14|Active     |    1|OW2 Shelbie ConfigAdmin Commands (2.1.0)
   15|Active     |    1|Apache Felix Gogo Runtime (0.10.0)
   16|Active     |    1|Peergreen Gogo Commands (1.0.0)
   17|Active     |    1|OPS4J Pax Url - mvn: (1.2.8)
   18|Active     |    1|Peergreen Deployment Commands (1.0.0)
   19|Active     |    1|Peergreen Java VM Commands (1.0.0)
   20|Active     |    1|Peergreen Telnetd (1.0.1)
   21|Active     |    1|Peergreen newsfeed (1.0.1)
   22|Active     |    1|Peergreen Newsfeed Commands (1.0.1)
   23|Active     |    1|Peergreen Security Base (1.0.1.SNAPSHOT)
   24|Active     |    1|Peergreen Security Commands (1.0.0)
   25|Active     |    1|Peergreen Shelbie Local Console (1.0.0)
   28|Resolved   |    1|Test of exported package (1.0.0.SNAPSHOT)
   <emphasis role="bold">94|Active     |    1|hello-service (1.0.0.SNAPSHOT)</emphasis></prompt></screen>

    <para>Inversely, the bundle is undeployed when you remove the file from the directory.</para>

    <screen><prompt>rm &lt;your-install-dir&gt;/deploy/hello-service-1.0.0-SNAPSHOT.jar</prompt></screen>

    <para>And :</para>

    <screen><prompt>me@peergreen-platform$ lb
START LEVEL 1
   ID|State      |Level|Name
    0|Active     |    0|systemBundle (3.8.1.v20120830-144521)
    1|Active     |    1|Peergreen Deployment Api (1.0.1)
    2|Active     |    1|Peergreen Deployment Internal (1.0.1)
    3|Active     |    1|extension-jonas (1.0.1)
    4|Active     |    1|Peergreen deployment scanner (1.0.1)
    5|Active     |    1|Apache Felix iPOJO (1.10.1)
    6|Active     |    1|Apache Felix iPOJO White Board Pattern Handler (1.6.0)
    7|Active     |    1|OW2 Utilities :: i18n (2.0.0)
    8|Active     |    1|OW2 Utilities :: Log :: JUL Bridge (2.0.0)
    9|Active     |    1|Apache Felix Configuration Admin Service (1.6.0)
   10|Active     |    1|Apache Felix Resolver (0.1.0.r20130402)
   11|Active     |    1|OW2 Shelbie :: Core (2.0.0.M3)
   12|Active     |    1|OW2 Shelbie iPOJO Commands (2.0.0.M3)
   13|Active     |    1|OW2 Shelbie :: Commands :: Built-in (2.0.0.M3)
   14|Active     |    1|OW2 Shelbie ConfigAdmin Commands (2.1.0)
   15|Active     |    1|Apache Felix Gogo Runtime (0.10.0)
   16|Active     |    1|Peergreen Gogo Commands (1.0.0)
   17|Active     |    1|OPS4J Pax Url - mvn: (1.2.8)
   18|Active     |    1|Peergreen Deployment Commands (1.0.0)
   19|Active     |    1|Peergreen Java VM Commands (1.0.0)
   20|Active     |    1|Peergreen Telnetd (1.0.1)
   21|Active     |    1|Peergreen newsfeed (1.0.1)
   22|Active     |    1|Peergreen Newsfeed Commands (1.0.1)
   23|Active     |    1|Peergreen Security Base (1.0.1.SNAPSHOT)
   24|Active     |    1|Peergreen Security Commands (1.0.0)
   25|Active     |    1|Peergreen Shelbie Local Console (1.0.0)
   28|Resolved   |    1|Test of exported package (1.0.0.SNAPSHOT)</prompt></screen>
  </section>

  <section>
    <title>Logging</title>

    <para>Standard and error outputs are redirected into files under the
    <emphasis>&lt;your-dir&gt;/peergreen/logs</emphasis> directory :</para>

    <screen><prompt>system.out
system.err</prompt></screen>
  </section>

  <section>
    <title>Stopping Peergreen Server</title>

    <para>To stop Peergreen server from the console, enter <literal>^D</literal> in the console.</para>

    <para>Alternatively, you can also run the following command:</para>

    <screen><prompt>osgi:shutdown</prompt></screen>

    <para>Whenever some application threads don’t stop, the server prints a message, then kills all the remaining
    threads. You can disable this behavior with the following java property :</para>

    <screen><prompt>-Dcom.peergreen.bootstrap.thread.check.reportonly=true</prompt></screen>
  </section>
</chapter>
